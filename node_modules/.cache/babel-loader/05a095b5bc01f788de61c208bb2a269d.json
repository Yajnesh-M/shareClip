{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_sellit\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('/allpost', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setData(result.posts);\n    });\n  }, []);\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    });\n  };\n\n  const makecomment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"80px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: data.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card home-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: item.postedBy.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.photo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [item.likes.includes(user._id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                style: {\n                  color: \"red\"\n                },\n                children: \"favorite\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                onClick: () => {\n                  unlikePost(item._id);\n                },\n                children: \"thumb_down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                style: {\n                  color: \"red\"\n                },\n                children: \"favorite_border\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                onClick: () => {\n                  likePost(item._id);\n                },\n                children: \"thumb_up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [item.likes.length, \" Likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", item.body, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), item.comments.map(record => {\n              return /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: record.postedBy.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 56\n                }, this), \" \", record.text]\n              }, record._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 35\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                e.preventDefault();\n                makecomment(e.target[0].value, item._id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"add a comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Home, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/react_sellit/src/components/screens/Home.js"],"names":["React","useState","useEffect","useContext","Home","user","JSON","parse","localStorage","getItem","data","setData","fetch","headers","then","res","json","result","console","log","posts","likePost","id","method","body","stringify","postId","newData","map","item","_id","unlikePost","makecomment","text","display","margin","postedBy","name","photo","likes","includes","color","length","title","comments","record","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react'\r\n\r\n\r\n\r\n\r\nconst Home = ()=>{ \r\n    let user=JSON.parse(localStorage.getItem(\"user\"))\r\n    const [data,setData] = useState([])\r\n   \r\n    useEffect(()=>{\r\n        fetch('/allpost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n     },[])\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>\r\n        {\r\n\r\n           const newData=data.map(item=>\r\n            {\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else\r\n                {\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>\r\n        {\r\n            const newData=data.map(item=>\r\n            {\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else\r\n                {\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n    const makecomment=(text,postId)=>\r\n    {\r\n        fetch('/comment',\r\n        {\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify(\r\n            {\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json()).then(result=>{\r\n            console.log(result)\r\n            const newData=data.map(item=>\r\n            {\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else\r\n                {\r\n                    return item\r\n                }\r\n\r\n            })\r\n        setData(newData) })\r\n        \r\n    }\r\n    return(\r\n<div>\r\n<div style={{display:\"flex\",margin:\"80px\"}}></div>\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                        <h5>{item.postedBy.name}</h5>\r\n                        <div className=\"card-image\">\r\n                            <img src={item.photo}/>\r\n        \r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                        {item.likes.includes(user._id)?\r\n                            <div>\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                           <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\r\n                       </div>\r\n                           : \r\n                           <div>\r\n                           <i className=\"material-icons\" style={{color:\"red\"}}>favorite_border</i>\r\n                           <i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>\r\n                           </div>\r\n                        }\r\n                        \r\n                        \r\n                       \r\n                        \r\n                            <h6>{item.likes.length} Likes</h6>\r\n                            <h6>{item.title}</h6>\r\n                            <p> {item.body} </p>\r\n                          {\r\n                            item.comments.map(record=>{\r\n                                return(\r\n\r\n                                  <h6 key={record._id}><b>{record.postedBy.name}</b> {record.text}</h6>\r\n                                    )\r\n                            })\r\n                          }\r\n                            <form onSubmit={(e)=>\r\n                                {\r\n                                    e.preventDefault()\r\n                                     makecomment(e.target[0].value,item._id)\r\n                                 \r\n                                }}>\r\n                            <input type=\"text\" placeholder=\"add a comment\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n           \r\n</div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}